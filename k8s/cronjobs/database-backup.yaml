apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: revrx
  labels:
    app: postgres-backup
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM UTC
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: postgres-backup-job
        spec:
          restartPolicy: OnFailure
          containers:
          - name: backup
            image: postgres:16-alpine
            command:
            - /bin/sh
            - -c
            - |
              set -e

              TIMESTAMP=$(date +%Y%m%d-%H%M%S)
              BACKUP_FILE="revrx-backup-${TIMESTAMP}.sql"

              echo "Starting backup at ${TIMESTAMP}"

              # Create backup
              pg_dump -h postgres -U revrx -F c revrx_db > "/tmp/${BACKUP_FILE}"

              echo "Backup created, size: $(du -h /tmp/${BACKUP_FILE} | cut -f1)"

              # Compress backup
              gzip "/tmp/${BACKUP_FILE}"

              echo "Backup compressed, size: $(du -h /tmp/${BACKUP_FILE}.gz | cut -f1)"

              # Install AWS CLI
              apk add --no-cache aws-cli

              # Upload to S3
              aws s3 cp "/tmp/${BACKUP_FILE}.gz" \
                "s3://revrx-backups/database/${BACKUP_FILE}.gz" \
                --server-side-encryption AES256

              # Verify upload
              if aws s3 ls "s3://revrx-backups/database/${BACKUP_FILE}.gz"; then
                echo "Backup successfully uploaded to S3"
              else
                echo "ERROR: Backup upload failed"
                exit 1
              fi

              # Clean up old backups (keep last 90 days)
              CUTOFF_DATE=$(date -d '90 days ago' +%Y%m%d 2>/dev/null || date -v-90d +%Y%m%d)
              aws s3 ls s3://revrx-backups/database/ | while read -r line; do
                BACKUP_DATE=$(echo $line | grep -oP 'revrx-backup-\K\d{8}' || echo "")
                if [ ! -z "$BACKUP_DATE" ] && [ "$BACKUP_DATE" -lt "$CUTOFF_DATE" ]; then
                  BACKUP_NAME=$(echo $line | awk '{print $4}')
                  echo "Deleting old backup: $BACKUP_NAME"
                  aws s3 rm "s3://revrx-backups/database/$BACKUP_NAME"
                fi
              done

              # Clean up local files
              rm "/tmp/${BACKUP_FILE}.gz"

              echo "Backup completed successfully"
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: secret-access-key
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: region
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "1Gi"
                cpu: "500m"
